# Load the OpenTracing dynamic module.
load_module modules/ngx_http_opentracing_module.so;
worker_processes 2;

events { worker_connections 1024; }

http {
    sendfile on;

    # Enable tracing for all requests.
    opentracing on;
    #opentracing_load_tracer /usr/local/lib/libzipkin_opentracing_plugin.so /etc/zipkin/zipkin-config.json;
    opentracing_load_tracer /usr/local/lib/libjaegertracing_plugin.so  /etc/zipkin/jaeger-config.json;

    # Optionally, set additional tags.
    opentracing_tag http_user_agent $http_user_agent;
    opentracing_tag bytes_sent $bytes_sent;
    opentracing_tag request_time $request_time;
    opentracing_tag upstream_addr $upstream_addr;
    opentracing_tag upstream_bytes_received $upstream_bytes_received;
    opentracing_tag upstream_cache_status $upstream_cache_status;
    opentracing_tag upstream_connect_time $upstream_connect_time;
    opentracing_tag upstream_header_time $upstream_header_time;
    opentracing_tag upstream_response_time $upstream_response_time;

    server {
        listen 80;

        access_log /dev/stdout;

        add_header 'Access-Control-Allow-Origin' "$http_origin" always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;


        location /redis-api/ {
            rewrite           ^/redis-api(/.*)$ $1 break;
            proxy_pass        http://api:3000;
            proxy_redirect    off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
            opentracing_propagate_context;
            opentracing_tag srvName redis-api;
        }


    }

    #include /etc/nginx/conf.d/*.conf;
}